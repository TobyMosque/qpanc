// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QPANC.Domain.Audit;

namespace QPANC.Domain.Audit.Migrations
{
    [DbContext(typeof(QpancAuditContext))]
    partial class QpancAuditContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("QPANC.Services.Abstract.Entities.Identity.Audit.Role", b =>
                {
                    b.Property<Guid>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("AuditedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<byte>("Operation")
                        .HasColumnType("smallint");

                    b.Property<int>("RevNumber")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserSessionId")
                        .HasColumnType("uuid");

                    b.HasKey("Revision");

                    b.HasIndex("Id", "RevNumber");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("QPANC.Services.Abstract.Entities.Identity.Audit.RoleClaim", b =>
                {
                    b.Property<Guid>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("AuditedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<byte>("Operation")
                        .HasColumnType("smallint");

                    b.Property<int>("RevNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserSessionId")
                        .HasColumnType("uuid");

                    b.HasKey("Revision");

                    b.HasIndex("Id", "RevNumber");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("QPANC.Services.Abstract.Entities.Identity.Audit.Session", b =>
                {
                    b.Property<Guid>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("AuditedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("ExpireAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("Operation")
                        .HasColumnType("smallint");

                    b.Property<int>("RevNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserSessionId")
                        .HasColumnType("uuid");

                    b.HasKey("Revision");

                    b.HasIndex("SessionId", "RevNumber");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("QPANC.Services.Abstract.Entities.Identity.Audit.User", b =>
                {
                    b.Property<Guid>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("AuditedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<byte>("Operation")
                        .HasColumnType("smallint");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<int>("RevNumber")
                        .HasColumnType("integer");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("UserSessionId")
                        .HasColumnType("uuid");

                    b.HasKey("Revision");

                    b.HasIndex("Id", "RevNumber");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("QPANC.Services.Abstract.Entities.Identity.Audit.UserClaim", b =>
                {
                    b.Property<Guid>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("AuditedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<byte>("Operation")
                        .HasColumnType("smallint");

                    b.Property<int>("RevNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserSessionId")
                        .HasColumnType("uuid");

                    b.HasKey("Revision");

                    b.HasIndex("Id", "RevNumber");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("QPANC.Services.Abstract.Entities.Identity.Audit.UserLogin", b =>
                {
                    b.Property<Guid>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("AuditedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<byte>("Operation")
                        .HasColumnType("smallint");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<int>("RevNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserSessionId")
                        .HasColumnType("uuid");

                    b.HasKey("Revision");

                    b.HasIndex("LoginProvider", "ProviderKey", "RevNumber");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("QPANC.Services.Abstract.Entities.Identity.Audit.UserRole", b =>
                {
                    b.Property<Guid>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("AuditedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("Operation")
                        .HasColumnType("smallint");

                    b.Property<int>("RevNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserSessionId")
                        .HasColumnType("uuid");

                    b.HasKey("Revision");

                    b.HasIndex("UserId", "RoleId", "RevNumber");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("QPANC.Services.Abstract.Entities.Identity.Audit.UserToken", b =>
                {
                    b.Property<Guid>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("AuditedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("Operation")
                        .HasColumnType("smallint");

                    b.Property<int>("RevNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserSessionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Revision");

                    b.HasIndex("UserId", "LoginProvider", "RevNumber");

                    b.ToTable("AspNetUserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
